# --- Configurable args ---
ARG CUDA_VERSION=11.8.0
ARG CUDNN_VERSION=cudnn8
ARG ROS_DISTRO=humble
ARG USERNAME=dev
ARG UID=1000
ARG GID=1000

# --- CUDA devel image (includes /usr/local/cuda/bin) ---
FROM nvidia/cuda:${CUDA_VERSION}-${CUDNN_VERSION}-devel-ubuntu22.04

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ARG DEBIAN_FRONTEND=noninteractive
ARG ROS_DISTRO
ARG USERNAME UID GID

# --- Base OS + dev tools + editors (vim/nano/htop) + build deps ---
RUN apt-get update && apt-get install -y --no-install-recommends \
    locales curl gnupg2 lsb-release ca-certificates apt-transport-https \
    build-essential cmake ninja-build pkg-config \
    git git-lfs \
    python3 python3-pip python3-venv python3-dev \
    ffmpeg libgl1 libglib2.0-0 \
    sudo vim nano htop tmux \
 && rm -rf /var/lib/apt/lists/*

# Locale
RUN locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8
ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

# --- ROS 2 repo + key ---
RUN mkdir -p /etc/apt/keyrings && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
      | gpg --dearmor -o /etc/apt/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/ros-archive-keyring.gpg] \
      http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
      > /etc/apt/sources.list.d/ros2.list

# --- ROS 2 + tools ---
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS_DISTRO}-desktop \
    python3-colcon-common-extensions \
    python3-rosdep python3-rosinstall python3-vcstool \
 && rm -rf /var/lib/apt/lists/*
RUN rosdep init || true && rosdep update

# CUDA envs (nvcc, libs on PATH)
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# --- Non-root user with passwordless sudo (optional, convenient) ---
RUN groupadd -g ${GID} ${USERNAME} && \
    useradd -m -s /bin/bash -u ${UID} -g ${GID} ${USERNAME} && \
    usermod -aG sudo ${USERNAME} && \
    echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Auto-source ROS for the user
USER ${USERNAME}
WORKDIR /home/${USERNAME}
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc

# --- Copy and run your setup script (runs as ${USERNAME}) ---
COPY setup_vizflyt.sh /opt/setup/setup_vizflyt.sh
RUN chmod +x /opt/setup/setup_vizflyt.sh

# --- Build ARG to toggle script execution ---
ARG BUILD_VIZFLYT=true

# --- Conditionally run the script ---
RUN if [ "$BUILD_VIZFLYT" = "true" ]; then \
        bash /opt/setup/setup_vizflyt.sh ; \
    else \
        echo "Skipping setup_vizflyt.sh" ; \
    fi


# Default shell
CMD ["/bin/bash"]
